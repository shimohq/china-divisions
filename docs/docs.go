// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-02-27 16:16:23.188606 +0800 CST m=+0.070132530

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "中国行政区域查询，数据来源：https://github.com/modood/Administrative-divisions-of-China",
        "title": "🇨🇳中国行政区查询服务",
        "contact": {},
        "license": {},
        "version": "1.0"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/district": {
            "get": {
                "description": "最多能获取到区级别的联动信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "district"
                ],
                "summary": "如果不传入 code 或 code 无效，会根据 subdistrict 来返回所有的行政区数据；",
                "parameters": [
                    {
                        "type": "string",
                        "description": "行政区代码",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "string default",
                        "name": "subdistrict",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
